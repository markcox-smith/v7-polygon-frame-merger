import upolygon as up
import numpy as np

from darwin.utils import convert_polygons_to_sequences
from darwin.version import __version__

example_path = [{ "x": 39.79, "y": 416.97 }, { "x": 35.41, "y": 412.21 }, { "x": 33.19, "y": 410.37 }, { "x": 31.2, "y": 409.52 }, { "x": 28.82, "y": 409.19 }, { "x": 26.14, "y": 409.46 }, { "x": 23.47, "y": 410.46 }, { "x": 21.56, "y": 412.22 }, { "x": 17.58, "y": 416.24 }, { "x": 15.12, "y": 419.96 }, { "x": 14.1, "y": 422.8 }, { "x": 14.06, "y": 424.94 }, { "x": 14.21, "y": 427.06 }, { "x": 15.0, "y": 429.46 }, { "x": 16.32, "y": 431.18 }, { "x": 18.68, "y": 432.76 }, { "x": 21.93, "y": 434.05 }, { "x": 26.15, "y": 435.41 }, { "x": 29.97, "y": 435.84 }, { "x": 36.6, "y": 435.31 }, { "x": 41.88, "y": 434.63 }, { "x": 47.73, "y": 435.23 }, { "x": 52.85, "y": 437.17 }, { "x": 56.14, "y": 438.93 }, { "x": 59.14, "y": 441.23 }, { "x": 62.68, "y": 445.55 }, { "x": 65.79, "y": 450.6 }, { "x": 69.21, "y": 456.23 }, { "x": 72.93, "y": 461.24 }, { "x": 77.78, "y": 466.11 }, { "x": 85.27, "y": 471.54 }, { "x": 91.23, "y": 475.07 }, { "x": 96.17, "y": 476.39 }, { "x": 102.35, "y": 477.44 }, { "x": 107.39, "y": 477.64 }, { "x": 112.21, "y": 476.95 }, { "x": 116.42, "y": 475.0 }, { "x": 119.08, "y": 474.22 }, { "x": 120.66, "y": 473.95 }, { "x": 121.28, "y": 473.16 }, { "x": 121.51, "y": 471.53 }, { "x": 121.22, "y": 469.92 }, { "x": 120.44, "y": 468.83 }, { "x": 118.9, "y": 467.94 }, { "x": 116.64, "y": 467.32 }, { "x": 113.53, "y": 466.97 }, { "x": 108.28, "y": 467.15 }, { "x": 103.28, "y": 468.15 }, { "x": 98.83, "y": 469.49 }, { "x": 96.2, "y": 470.48 }, { "x": 94.16, "y": 470.47 }, { "x": 91.19, "y": 469.3 }, { "x": 86.41, "y": 467.09 }, { "x": 81.01, "y": 463.93 }, { "x": 76.62, "y": 459.89 }, { "x": 71.01, "y": 452.94 }, { "x": 68.13, "y": 447.85 }, { "x": 61.83, "y": 439.42 }, { "x": 55.03, "y": 433.03 }, { "x": 45.06, "y": 423.37 }]

def gen_mask(polygon,height,width):
    """
    Takes a list of polygon points and returns a binary mask
    """
    mask = np.zeros((height, width))
    path = polygon
    sequences = convert_polygons_to_sequences(path)
    up.draw_polygon(mask, sequences, 1)
    return mask
    counts = up.rle_encode(mask)
